{"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"Parser.match(path:)"},{"text":".","type":"text"}],"metadata":{"externalID":"s:7Parsing6ParserP10URLRoutingAD14URLRequestDataV5InputRtzrlE5match4path6OutputQzSS_tKF::SYNTHESIZED::s:10URLRouting12PathZipOOVOVV","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"match","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"title":"match(path:)","modules":[{"name":"URLRouting"}],"role":"symbol","extendedModule":"Parsing","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"URLRequestData"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"symbolKind":"method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/urlrouting\/pathzipoovov\/match(path:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipOOVOV","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipOOVOV\/Parser-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipOOVOV\/match(path:)"},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"match","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"languages":["swift"]}]}],"references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipOOVOV/Parser-Implementations":{"type":"topic","kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipOOVOV\/Parser-Implementations","url":"\/documentation\/urlrouting\/pathzipoovov\/parser-implementations","title":"Parser Implementations"},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"title":"URLRouting","type":"topic","abstract":[{"type":"text","text":"A bidirectional router with more type safety and less fuss. This library is built with "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},{"type":"text","text":"."}],"role":"collection","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","url":"\/documentation\/urlrouting","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipOOVOV":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathZipOOVOV","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"PathZipOOVOV","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipOOVOV","url":"\/documentation\/urlrouting\/pathzipoovov","title":"PathZipOOVOV"},"http://github.com/pointfreeco/swift-parsing":{"titleInlineContent":[{"type":"text","text":"Parsing"}],"title":"Parsing","url":"http:\/\/github.com\/pointfreeco\/swift-parsing","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","type":"link"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipOOVOV/match(path:)":{"conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"URLRequestData","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","type":"topic","abstract":[],"kind":"symbol","title":"match(path:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"match","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipOOVOV\/match(path:)","url":"\/documentation\/urlrouting\/pathzipoovov\/match(path:)"}}}