{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathzipovvvoo\/map(_:)-se7n"]}],"sections":[],"abstract":[{"type":"text","text":"Returns a parser that replaces the "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" output of this parser with the output of a given"},{"type":"text","text":" "},{"type":"text","text":"closure."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipOVVVOO","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipOVVVOO\/Parser-Implementations"]]},"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipOVVVOO\/map(_:)-se7n","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MapConstant","preciseIdentifier":"s:7Parsing7ParsersO11MapConstantV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"A parser of outputs.","type":"text"}]}],"kind":"content"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that returns an output.","type":"text"}]}],"name":"transform"}],"kind":"parameters"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"A printer-friendly version of "},{"type":"codeVoice","code":"Parser\/map(_:)-2e6si"},{"type":"text","text":" for "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" outputs, so long as"},{"type":"text","text":" "},{"type":"codeVoice","code":"NewOutput"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"swift","code":["enum Role: String {","  case admin","  case guest","  case member","}","","let role = OneOf {","  \"admin\".map { Role.admin }","  \"guest\".map { Role.guest }","  \"member\".map { Role.member }","}","","try role.parse(\"admin\")  \/\/ Role.admin","role.print(.guest)       \/\/ \"guest\""],"type":"codeListing"}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(() -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO11MapConstantV","text":"MapConstant"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}],"title":"map(_:)","externalID":"s:7Parsing6ParserPAAE3mapyAA7ParsersO11MapConstantVy_xqd__Gqd__yXEyt6OutputRtzlF::SYNTHESIZED::s:10URLRouting13PathZipOVVVOOV","role":"symbol","extendedModule":"Parsing","modules":[{"name":"URLRouting"}]},"references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipOVVVOO/Parser-Implementations":{"type":"topic","title":"Parser Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipOVVVOO\/Parser-Implementations","url":"\/documentation\/urlrouting\/pathzipovvvoo\/parser-implementations","role":"collectionGroup"},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"title":"URLRouting","type":"topic","abstract":[{"type":"text","text":"A bidirectional router with more type safety and less fuss. This library is built with "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},{"type":"text","text":"."}],"role":"collection","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","url":"\/documentation\/urlrouting","kind":"symbol"},"http://github.com/pointfreeco/swift-parsing":{"type":"link","titleInlineContent":[{"type":"text","text":"Parsing"}],"url":"http:\/\/github.com\/pointfreeco\/swift-parsing","title":"Parsing","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipOVVVOO":{"url":"\/documentation\/urlrouting\/pathzipovvvoo","navigatorTitle":[{"kind":"identifier","text":"PathZipOVVVOO"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathZipOVVVOO"}],"type":"topic","kind":"symbol","title":"PathZipOVVVOO","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipOVVVOO","abstract":[],"role":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipOVVVOO/map(_:)-se7n":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(() -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO11MapConstantV","kind":"typeIdentifier","text":"MapConstant"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}],"url":"\/documentation\/urlrouting\/pathzipovvvoo\/map(_:)-se7n","kind":"symbol","abstract":[{"type":"text","text":"Returns a parser that replaces the "},{"code":"Void","type":"codeVoice"},{"type":"text","text":" output of this parser with the output of a given"},{"type":"text","text":" "},{"type":"text","text":"closure."}],"title":"map(_:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipOVVVOO\/map(_:)-se7n"}}}