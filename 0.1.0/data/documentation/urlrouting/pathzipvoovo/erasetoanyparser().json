{"abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVOOVO","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVOOVO\/Parser-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"code":"AnyParser","type":"codeVoice"},{"text":" wrapping this parser.","type":"text"}]}],"kind":"content"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This form of "},{"type":"emphasis","inlineContent":[{"text":"type erasure","type":"text"}]},{"type":"text","text":" preserves abstraction across API boundaries, such as different"},{"type":"text","text":" "},{"type":"text","text":"modules."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"When you expose your composed parsers as the "},{"type":"codeVoice","code":"AnyParser"},{"type":"text","text":" type, you can change the underlying"},{"type":"text","text":" "},{"type":"text","text":"implementation over time without affecting existing clients."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Equivalent to passing "},{"code":"self","type":"codeVoice"},{"type":"text","text":" to "},{"code":"AnyParser.init","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVOOVO\/eraseToAnyParser()","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathzipvoovo\/erasetoanyparser()"]}],"sections":[],"metadata":{"modules":[{"name":"URLRouting"}],"title":"eraseToAnyParser()","role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV","text":"AnyParser"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"externalID":"s:7Parsing6ParserPAAE010eraseToAnyB0AA0eB0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:10URLRouting12PathZipVOOVOV","roleHeading":"Instance Method","extendedModule":"Parsing"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipVOOVO/eraseToAnyParser()":{"url":"\/documentation\/urlrouting\/pathzipvoovo\/erasetoanyparser()","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVOOVO\/eraseToAnyParser()","role":"symbol","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"eraseToAnyParser()","type":"topic"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipVOOVO/Parser-Implementations":{"type":"topic","title":"Parser Implementations","url":"\/documentation\/urlrouting\/pathzipvoovo\/parser-implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVOOVO\/Parser-Implementations","role":"collectionGroup","kind":"article","abstract":[]},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipVOOVO":{"role":"symbol","kind":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"PathZipVOOVO"}],"title":"PathZipVOOVO","url":"\/documentation\/urlrouting\/pathzipvoovo","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVOOVO","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathZipVOOVO"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"title":"URLRouting","type":"topic","abstract":[{"type":"text","text":"A bidirectional router with more type safety and less fuss. This library is built with "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},{"type":"text","text":"."}],"role":"collection","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","url":"\/documentation\/urlrouting","kind":"symbol"},"http://github.com/pointfreeco/swift-parsing":{"type":"link","title":"Parsing","url":"http:\/\/github.com\/pointfreeco\/swift-parsing","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","titleInlineContent":[{"text":"Parsing","type":"text"}]}}}