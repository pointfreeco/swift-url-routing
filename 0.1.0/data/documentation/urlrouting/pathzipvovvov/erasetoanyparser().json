{"sections":[],"metadata":{"symbolKind":"method","modules":[{"name":"URLRouting"}],"externalID":"s:7Parsing6ParserPAAE010eraseToAnyB0AA0eB0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:10URLRouting13PathZipVOVVOVV","title":"eraseToAnyParser()","extendedModule":"Parsing","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathzipvovvov\/erasetoanyparser()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVOVVOV\/eraseToAnyParser()"},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing9AnyParserV","text":"AnyParser","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AnyParser"},{"type":"text","text":" wrapping this parser."}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"This form of ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"type erasure","type":"text"}]},{"text":" preserves abstraction across API boundaries, such as different","type":"text"},{"text":" ","type":"text"},{"text":"modules.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"When you expose your composed parsers as the ","type":"text"},{"type":"codeVoice","code":"AnyParser"},{"text":" type, you can change the underlying","type":"text"},{"text":" ","type":"text"},{"text":"implementation over time without affecting existing clients.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Equivalent to passing ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"AnyParser.init","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVOVVOV","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVOVVOV\/Parser-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipVOVVOV":{"title":"PathZipVOVVOV","url":"\/documentation\/urlrouting\/pathzipvovvov","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathZipVOVVOV","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"PathZipVOVVOV","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVOVVOV","kind":"symbol","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipVOVVOV/eraseToAnyParser()":{"abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"url":"\/documentation\/urlrouting\/pathzipvovvov\/erasetoanyparser()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV","text":"AnyParser"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"eraseToAnyParser()","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVOVVOV\/eraseToAnyParser()"},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"title":"URLRouting","type":"topic","abstract":[{"type":"text","text":"A bidirectional router with more type safety and less fuss. This library is built with "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},{"type":"text","text":"."}],"role":"collection","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","url":"\/documentation\/urlrouting","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipVOVVOV/Parser-Implementations":{"url":"\/documentation\/urlrouting\/pathzipvovvov\/parser-implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVOVVOV\/Parser-Implementations","type":"topic","role":"collectionGroup","title":"Parser Implementations","abstract":[],"kind":"article"},"http://github.com/pointfreeco/swift-parsing":{"type":"link","titleInlineContent":[{"type":"text","text":"Parsing"}],"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","url":"http:\/\/github.com\/pointfreeco\/swift-parsing","title":"Parsing"}}}