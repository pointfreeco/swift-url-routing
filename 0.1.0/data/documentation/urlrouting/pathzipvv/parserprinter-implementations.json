{"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV\/ParserPrinter-Implementations","interfaceLanguage":"swift"},"topicSections":[{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV\/baseRequestData(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV\/baseURL(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV\/eraseToAnyParserPrinter()","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV\/path(for:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV\/print()","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV\/print(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV\/print(_:into:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV\/print(into:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV\/request(for:)","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV\/url(for:)"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathzipvv\/parserprinter-implementations"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV"]]},"metadata":{"role":"collectionGroup","modules":[{"name":"URLRouting"}],"title":"ParserPrinter Implementations"},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"article","references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipVV/url(for:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV\/url(for:)","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"URLRequestData","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[],"title":"url(for:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"url"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","text":"URL"}],"role":"symbol","url":"\/documentation\/urlrouting\/pathzipvv\/url(for:)"},"http://github.com/pointfreeco/swift-parsing":{"title":"Parsing","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","titleInlineContent":[{"type":"text","text":"Parsing"}],"type":"link","url":"http:\/\/github.com\/pointfreeco\/swift-parsing"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipVV/eraseToAnyParserPrinter()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParserPrinter","preciseIdentifier":"s:7Parsing16AnyParserPrinterV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV\/eraseToAnyParserPrinter()","title":"eraseToAnyParserPrinter()","type":"topic","role":"symbol","url":"\/documentation\/urlrouting\/pathzipvv\/erasetoanyparserprinter()","kind":"symbol","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipVV/request(for:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"URLRequestData"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"request(for:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV\/request(for:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"request","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"URLRequest","kind":"typeIdentifier","preciseIdentifier":"s:20FoundationNetworking10URLRequestV"}],"type":"topic","url":"\/documentation\/urlrouting\/pathzipvv\/request(for:)","abstract":[],"role":"symbol","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipVV":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathZipVV","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV","title":"PathZipVV","type":"topic","role":"symbol","navigatorTitle":[{"text":"PathZipVV","kind":"identifier"}],"url":"\/documentation\/urlrouting\/pathzipvv","kind":"symbol","abstract":[]},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"title":"URLRouting","type":"topic","abstract":[{"type":"text","text":"A bidirectional router with more type safety and less fuss. This library is built with "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},{"type":"text","text":"."}],"role":"collection","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","url":"\/documentation\/urlrouting","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipVV/print(into:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"print(into:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV\/print(into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"type":"topic","url":"\/documentation\/urlrouting\/pathzipvv\/print(into:)","abstract":[{"type":"text","text":"Attempts to print into a nebulous piece of data."}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipVV/baseRequestData(_:)":{"conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"URLRequestData","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV\/baseRequestData(_:)","type":"topic","url":"\/documentation\/urlrouting\/pathzipvv\/baserequestdata(_:)","abstract":[{"text":"Prepends a router with default request data for the purpose of printing.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"baseRequestData","kind":"identifier"},{"text":"(","kind":"text"},{"text":"URLRequestData","kind":"typeIdentifier","preciseIdentifier":"s:10URLRouting14URLRequestDataV"},{"text":") -> ","kind":"text"},{"text":"BaseURLPrinter","kind":"typeIdentifier","preciseIdentifier":"s:10URLRouting14BaseURLPrinterV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"baseRequestData(_:)","kind":"symbol","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipVV/path(for:)":{"conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"URLRequestData","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"path(for:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV\/path(for:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"path","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"type":"topic","url":"\/documentation\/urlrouting\/pathzipvv\/path(for:)","abstract":[],"role":"symbol","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipVV/print(_:into:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"P0"},{"type":"text","text":" conforms to "},{"code":"ParserPrinter","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P1","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P0.Input","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":", "},{"type":"codeVoice","code":"P0.Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":", "},{"type":"codeVoice","code":"P1.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":", and "},{"type":"codeVoice","code":"P1.Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"print(_:into:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV\/print(_:into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"((), ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLRequestData","preciseIdentifier":"s:10URLRouting14URLRequestDataV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"type":"topic","url":"\/documentation\/urlrouting\/pathzipvv\/print(_:into:)","abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data into something more nebulous."}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipVV/baseURL(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"URLRequestData"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"baseURL(_:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV\/baseURL(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"baseURL","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"BaseURLPrinter","preciseIdentifier":"s:10URLRouting14BaseURLPrinterV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/urlrouting\/pathzipvv\/baseurl(_:)","abstract":[{"type":"text","text":"Prepends a router with a base URL for the purpose of printing."}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipVV/print()":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV\/print()","role":"symbol","abstract":[{"text":"Attempts to print a nebulous piece of data.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"() "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_EmptyInitializable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","title":"print()","url":"\/documentation\/urlrouting\/pathzipvv\/print()"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipVV/print(_:)":{"role":"symbol","type":"topic","title":"print(_:)","url":"\/documentation\/urlrouting\/pathzipvv\/print(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVV\/print(_:)","kind":"symbol","abstract":[{"text":"Attempts to print a well-structured piece of data to something more nebulous.","type":"text"}],"conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"_EmptyInitializable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}}}}