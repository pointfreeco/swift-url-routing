{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVOVOVV\/eraseToAnyParser()"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AnyParser"},{"text":" wrapping this parser.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This form of "},{"inlineContent":[{"text":"type erasure","type":"text"}],"type":"emphasis"},{"type":"text","text":" preserves abstraction across API boundaries, such as different"},{"type":"text","text":" "},{"type":"text","text":"modules."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you expose your composed parsers as the "},{"type":"codeVoice","code":"AnyParser"},{"type":"text","text":" type, you can change the underlying"},{"type":"text","text":" "},{"type":"text","text":"implementation over time without affecting existing clients."}]},{"type":"paragraph","inlineContent":[{"text":"Equivalent to passing ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"AnyParser.init","type":"codeVoice"},{"text":".","type":"text"}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathzipvovovv\/erasetoanyparser()"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVOVOVV","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVOVOVV\/Parser-Implementations"]]},"kind":"symbol","metadata":{"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"URLRouting"}],"externalID":"s:7Parsing6ParserPAAE010eraseToAnyB0AA0eB0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:10URLRouting13PathZipVOVOVVV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"symbolKind":"method","title":"eraseToAnyParser()","extendedModule":"Parsing"},"abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipVOVOVV":{"title":"PathZipVOVOVV","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVOVOVV","role":"symbol","url":"\/documentation\/urlrouting\/pathzipvovovv","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathZipVOVOVV"}],"navigatorTitle":[{"kind":"identifier","text":"PathZipVOVOVV"}],"abstract":[],"type":"topic"},"http://github.com/pointfreeco/swift-parsing":{"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","titleInlineContent":[{"type":"text","text":"Parsing"}],"type":"link","title":"Parsing","url":"http:\/\/github.com\/pointfreeco\/swift-parsing"},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"title":"URLRouting","type":"topic","abstract":[{"type":"text","text":"A bidirectional router with more type safety and less fuss. This library is built with "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},{"type":"text","text":"."}],"role":"collection","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","url":"\/documentation\/urlrouting","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipVOVOVV/Parser-Implementations":{"type":"topic","url":"\/documentation\/urlrouting\/pathzipvovovv\/parser-implementations","kind":"article","abstract":[],"title":"Parser Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVOVOVV\/Parser-Implementations"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipVOVOVV/eraseToAnyParser()":{"abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier","text":"AnyParser"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"role":"symbol","title":"eraseToAnyParser()","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipVOVOVV\/eraseToAnyParser()","url":"\/documentation\/urlrouting\/pathzipvovovv\/erasetoanyparser()","type":"topic"}}}