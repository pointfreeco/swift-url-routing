{"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipOVOVVV\/eraseToAnyParser()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipOVOVVV","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipOVOVVV\/Parser-Implementations"]]},"sections":[],"variants":[{"paths":["\/documentation\/urlrouting\/pathzipovovvv\/erasetoanyparser()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"Parsing","role":"symbol","roleHeading":"Instance Method","title":"eraseToAnyParser()","externalID":"s:7Parsing6ParserPAAE010eraseToAnyB0AA0eB0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:10URLRouting13PathZipOVOVVVV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing9AnyParserV","text":"AnyParser","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"URLRouting"}],"symbolKind":"method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"text":"An ","type":"text"},{"code":"AnyParser","type":"codeVoice"},{"text":" wrapping this parser.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This form of "},{"inlineContent":[{"text":"type erasure","type":"text"}],"type":"emphasis"},{"type":"text","text":" preserves abstraction across API boundaries, such as different"},{"type":"text","text":" "},{"type":"text","text":"modules."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"When you expose your composed parsers as the "},{"code":"AnyParser","type":"codeVoice"},{"type":"text","text":" type, you can change the underlying"},{"type":"text","text":" "},{"type":"text","text":"implementation over time without affecting existing clients."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Equivalent to passing "},{"type":"codeVoice","code":"self"},{"type":"text","text":" to "},{"type":"codeVoice","code":"AnyParser.init"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipOVOVVV/eraseToAnyParser()":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipOVOVVV\/eraseToAnyParser()","title":"eraseToAnyParser()","type":"topic","url":"\/documentation\/urlrouting\/pathzipovovvv\/erasetoanyparser()","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier","text":"AnyParser"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"title":"URLRouting","type":"topic","abstract":[{"type":"text","text":"A bidirectional router with more type safety and less fuss. This library is built with "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},{"type":"text","text":"."}],"role":"collection","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","url":"\/documentation\/urlrouting","kind":"symbol"},"http://github.com/pointfreeco/swift-parsing":{"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","title":"Parsing","type":"link","url":"http:\/\/github.com\/pointfreeco\/swift-parsing","titleInlineContent":[{"type":"text","text":"Parsing"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipOVOVVV/Parser-Implementations":{"title":"Parser Implementations","abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipOVOVVV\/Parser-Implementations","kind":"article","url":"\/documentation\/urlrouting\/pathzipovovvv\/parser-implementations"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathZipOVOVVV":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathZipOVOVVV"}],"title":"PathZipOVOVVV","abstract":[],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PathZipOVOVVV"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathZipOVOVVV","kind":"symbol","url":"\/documentation\/urlrouting\/pathzipovovvv"}}}