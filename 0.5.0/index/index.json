{"interfaceLanguages":{"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/gettingstarted","title":"Getting Started","type":"article"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/parse(_:)","title":"func parse(inout URLRequestData) rethrows -> Upstream.Output","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/print(_:into:)","title":"func print(Upstream.Output, into: inout URLRequestData) rethrows","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/map(_:)-1ob4j","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/map(_:)-2b1n","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/map(_:)-vp7d","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/body-swift.typealias","title":"BaseURLPrinter.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/baseurlprinter\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/baseurlprinter\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/baseurlprinter\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/baseurlprinter","title":"BaseURLPrinter","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/body\/init()","title":"init()","type":"init"},{"path":"\/documentation\/urlrouting\/body\/init(_:)-19x80","title":"init<C>(C)","type":"init"},{"path":"\/documentation\/urlrouting\/body\/init(_:)-8t1z6","title":"init(() -> Bytes)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/body\/parse(_:)","title":"func parse(inout URLRequestData) throws -> Bytes.Output","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/body\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/body\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/body\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/body\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/body\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/body\/map(_:)-1p955","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/body\/map(_:)-6fayp","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/body\/map(_:)-88t5d","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/body\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/body\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/body\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/body\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/body\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/body\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/body\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/body\/body-swift.typealias","title":"Body.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/body\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/body\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/body\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/body\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/body\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/body\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/body\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/body\/print(_:into:)","title":"func print(Bytes.Output, into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/body\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/body\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/body\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/body\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/body","title":"Body","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/cookies\/init(build:)","title":"init(build: () -> Parsers)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/cookies\/parse(_:)","title":"func parse(inout URLRequestData) throws -> Parsers.Output","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/cookies\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/cookies\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/map(_:)-7nkpf","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/map(_:)-8f28m","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/map(_:)-8jkjs","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/cookies\/body-swift.typealias","title":"Cookies.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/cookies\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/cookies\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/print(_:into:)","title":"func print(Parsers.Output, into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/cookies\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/cookies\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/cookies","title":"Cookies","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/field\/init(_:_:default:)","title":"init<C>(String, C, default: Parsers.MapConversion<Parsers.ReplaceError<Rest<Substring>>, C>.Output?)","type":"init"},{"path":"\/documentation\/urlrouting\/field\/init(_:default:)","title":"init(String, default: Parsers.MapConversion<Parsers.ReplaceError<Rest<Substring>>, Conversions.SubstringToString>.Output?)","type":"init"},{"path":"\/documentation\/urlrouting\/field\/init(_:default:_:)","title":"init(String, default: Value.Output?, () -> Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/field\/parse(_:)","title":"func parse(inout URLRequestData.Fields) throws -> Value.Output","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/field\/body","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/field\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/field\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/field\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/field\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/field\/map(_:)-79q6d","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/field\/map(_:)-84yas","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/field\/map(_:)-8lpmi","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/field\/pipe(_:)-33c0s","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, ParserBuilder<Self.Input>.SkipSecond<Downstream, Parsers.PipeEnd<Self.Input>>>","type":"method"},{"path":"\/documentation\/urlrouting\/field\/pipe(_:)-6lagv","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/field\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/field\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/field\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"}],"path":"\/documentation\/urlrouting\/field\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/field\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/field\/print(_:into:)","title":"func print(Value.Output, into: inout URLRequestData.Fields) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/field\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"}],"path":"\/documentation\/urlrouting\/field\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/field","title":"Field","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/formdata\/init(build:)","title":"init(build: () -> FieldParsers)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/formdata\/parse(_:)","title":"func parse(inout Data) rethrows -> FieldParsers.Output","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/formdata\/body","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/formdata\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/formdata\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/formdata\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/formdata\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/formdata\/map(_:)-502z0","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/formdata\/map(_:)-5yg9t","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/formdata\/map(_:)-7107w","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/formdata\/pipe(_:)-3eqb0","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/formdata\/pipe(_:)-9j0wu","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, ParserBuilder<Self.Input>.SkipSecond<Downstream, Parsers.PipeEnd<Self.Input>>>","type":"method"},{"path":"\/documentation\/urlrouting\/formdata\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/formdata\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/formdata\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"}],"path":"\/documentation\/urlrouting\/formdata\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/formdata\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/formdata\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/formdata\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/formdata\/print(_:into:)","title":"func print(FieldParsers.Output, into: inout Data) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/formdata\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"}],"path":"\/documentation\/urlrouting\/formdata\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/formdata","title":"FormData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/fragment\/init()","title":"init()","type":"init"},{"path":"\/documentation\/urlrouting\/fragment\/init(_:)","title":"init<C>(C)","type":"init"},{"path":"\/documentation\/urlrouting\/fragment\/init(value:)","title":"init(value: () -> ValueParser)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/fragment\/parse(_:)","title":"func parse(inout URLRequestData) throws -> ValueParser.Output","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/fragment\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/fragment\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/map(_:)-1qj8i","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/map(_:)-3cpvd","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/map(_:)-6of7r","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/fragment\/body-swift.typealias","title":"Fragment.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/fragment\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/fragment\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/print(_:into:)","title":"func print(ValueParser.Output, into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/fragment\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/fragment\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/fragment","title":"Fragment","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/headers\/init(build:)","title":"init(build: () -> FieldParsers)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/headers\/parse(_:)","title":"func parse(inout URLRequestData) rethrows -> FieldParsers.Output","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/headers\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/headers\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/map(_:)-24ks0","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/map(_:)-7othf","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/map(_:)-8vy0q","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/headers\/body-swift.typealias","title":"Headers.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/headers\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/headers\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/print(_:into:)","title":"func print(FieldParsers.Output, into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/headers\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/headers\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/headers","title":"Headers","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/host\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/host\/parse(_:)","title":"func parse(inout URLRequestData) throws","type":"method"},{"path":"\/documentation\/urlrouting\/host\/print(_:into:)","title":"func print((), into: inout URLRequestData)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/host\/custom(_:)","title":"static func custom(String) -> Host","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/host\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/host\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/host\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/host\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/host\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/host\/map(_:)-4j72x","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/host\/map(_:)-5kscf","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/host\/map(_:)-61u","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/host\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/host\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/host\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/host\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/host\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/host\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/host\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/host\/body-swift.typealias","title":"Host.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/host\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/host\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/host\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/host\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/host\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/host\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/host\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/host\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/host\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/host\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/host\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/host","title":"Host","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/method\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/method\/parse(_:)","title":"func parse(inout URLRequestData) throws","type":"method"},{"path":"\/documentation\/urlrouting\/method\/print(_:into:)","title":"func print((), into: inout URLRequestData)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/method\/delete","title":"static let delete: Method","type":"property"},{"path":"\/documentation\/urlrouting\/method\/get","title":"static let get: OneOf<URLRequestData, (), OneOfBuilder<URLRequestData, ()>.OneOf2<Method, Method>>","type":"property"},{"path":"\/documentation\/urlrouting\/method\/patch","title":"static let patch: Method","type":"property"},{"path":"\/documentation\/urlrouting\/method\/post","title":"static let post: Method","type":"property"},{"path":"\/documentation\/urlrouting\/method\/put","title":"static let put: Method","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/method\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/method\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/method\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/method\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/method\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/method\/map(_:)-2r7o7","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/method\/map(_:)-9ayhg","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/method\/map(_:)-9hzq3","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/method\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/method\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/method\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/method\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/method\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/method\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/method\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/method\/body-swift.typealias","title":"Method.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/method\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/method\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/method\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/method\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/method\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/method\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/method\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/method\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/method\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/method\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/method\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/method","title":"Method","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/path\/init(build:)","title":"init(build: () -> ComponentParsers)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/path\/parse(_:)","title":"func parse(inout URLRequestData) rethrows -> ComponentParsers.Output","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/path\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/path\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/path\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/path\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/path\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/path\/map(_:)-2jjd","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/path\/map(_:)-4sha1","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/path\/map(_:)-6vegr","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/path\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/path\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/path\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/path\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/path\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/path\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/path\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/path\/body-swift.typealias","title":"Path.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/path\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/path\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/path\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/path\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/path\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/path\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/path\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/path\/print(_:into:)","title":"func print(ComponentParsers.Output, into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/path\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/path\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/path\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/path\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/path","title":"Path","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/query\/init(build:)","title":"init(build: () -> FieldParsers)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/query\/parse(_:)","title":"func parse(inout URLRequestData) rethrows -> FieldParsers.Output","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/query\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/query\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/query\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/query\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/query\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/query\/map(_:)-66a2n","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/query\/map(_:)-66yuv","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/query\/map(_:)-9io1m","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/query\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/query\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/query\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/query\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/query\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/query\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/query\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/query\/body-swift.typealias","title":"Query.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/query\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/query\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/query\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/query\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/query\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/query\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/query\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/query\/print(_:into:)","title":"func print(FieldParsers.Output, into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/query\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/query\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/query\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/query\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/query","title":"Query","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/route\/init(_:)-6z5cv","title":"init<C>(C)","type":"init"},{"path":"\/documentation\/urlrouting\/route\/init(_:)-7q3hh","title":"init<NewOutput>(NewOutput)","type":"init"},{"path":"\/documentation\/urlrouting\/route\/init(_:with:)-2x8d3","title":"init<C, P>(C, with: () -> P)","type":"init"},{"path":"\/documentation\/urlrouting\/route\/init(_:with:)-6x6x2","title":"init<Upstream, NewOutput>((Upstream.Output) -> NewOutput, with: () -> Upstream)","type":"init"},{"path":"\/documentation\/urlrouting\/route\/init(_:with:)-y895","title":"init<Upstream, NewOutput>(NewOutput, with: () -> Upstream)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/route\/parse(_:)","title":"func parse(inout URLRequestData) throws -> Parsers.Output","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/route\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/route\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/route\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/route\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/route\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/route\/map(_:)-21dpm","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/route\/map(_:)-3wqgk","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/route\/map(_:)-4dht0","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/route\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/route\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/route\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/route\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/route\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/route\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/route\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/route\/body-swift.typealias","title":"Route.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/route\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/route\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/route\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/route\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/route\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/route\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/route\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/route\/print(_:into:)","title":"func print(Parsers.Output, into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/route\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/route\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/route\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/route\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/route","title":"Route","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/scheme\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/scheme\/parse(_:)","title":"func parse(inout URLRequestData) throws","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/print(_:into:)","title":"func print((), into: inout URLRequestData)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/scheme\/http","title":"static let http: Scheme","type":"property"},{"path":"\/documentation\/urlrouting\/scheme\/https","title":"static let https: Scheme","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/scheme\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/scheme\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/map(_:)-40xr0","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/map(_:)-56ems","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/map(_:)-7esyw","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/scheme\/body-swift.typealias","title":"Scheme.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/scheme\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/scheme\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/scheme\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/scheme\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/scheme","title":"Scheme","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/init(_:isnamecasesensitive:)","title":"init(OrderedDictionary<String, ArraySlice<Substring?>>, isNameCaseSensitive: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/fields","title":"var fields: OrderedDictionary<String, ArraySlice<Substring?>>","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/subscript(_:)-625im","title":"subscript(String) -> ArraySlice<Substring?>?","type":"subscript"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/subscript(_:default:)","title":"subscript(String, default _: () -> ArraySlice<Substring?>) -> ArraySlice<Substring?>","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/endindex","title":"var endIndex: URLRequestData.Fields.Index","type":"property"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/startindex","title":"var startIndex: URLRequestData.Fields.Index","type":"property"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/underestimatedcount-54gzk","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/index(after:)","title":"func index(after: URLRequestData.Fields.Index) -> URLRequestData.Fields.Index","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/map(_:)-6oly1","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/subscript(_:)-2g7cm","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/subscript(_:)-43bei","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/subscript(_:)-56l0j","title":"subscript(URLRequestData.Fields.Index) -> URLRequestData.Fields.Element","type":"subscript"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/subscript(_:)-6quwd","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/index","title":"URLRequestData.Fields.Index","type":"typealias"}],"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/==(_:_:)","title":"static func == (URLRequestData.Fields, URLRequestData.Fields) -> Bool","type":"op"}],"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (String, ArraySlice<Substring?>)...)","type":"init"}],"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/expressiblebydictionaryliteral-implementations","title":"ExpressibleByDictionaryLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/underestimatedcount-6sx7k","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/flatmap(_:)-4enpc","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/flatmap(_:)-jkxa","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/map(_:)-23a8a","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/sorted(using:)-59xm","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/sorted(using:)-z23j","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/element","title":"URLRequestData.Fields.Element","type":"typealias"}],"path":"\/documentation\/urlrouting\/urlrequestdata\/fields\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/urlrequestdata\/fields","title":"URLRequestData.Fields","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/init()","title":"init()","type":"init"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/init(method:scheme:user:password:host:port:path:query:fragment:headers:body:)","title":"init(method: String?, scheme: String?, user: String?, password: String?, host: String?, port: Int?, path: String, query: OrderedDictionary<String, [String?]>, fragment: String?, headers: OrderedDictionary<String, [String?]>, body: Data?)","type":"init"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/init(request:)","title":"init?(request: URLRequest)","type":"init"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/init(string:)","title":"init?(string: String)","type":"init"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/init(url:)","title":"init?(url: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/body","title":"var body: Data?","type":"property"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/fragment","title":"var fragment: String?","type":"property"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/headers","title":"var headers: URLRequestData.Fields","type":"property"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/host","title":"var host: String?","type":"property"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/method","title":"var method: String?","type":"property"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/password","title":"var password: String?","type":"property"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/path","title":"var path: ArraySlice<Substring>","type":"property"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/port","title":"var port: Int?","type":"property"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/query","title":"var query: URLRequestData.Fields","type":"property"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/scheme","title":"var scheme: String?","type":"property"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/user","title":"var user: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/urlrouting\/urlrequestdata\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/urlrouting\/urlrequestdata\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/urlrouting\/urlrequestdata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlrequestdata\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/urlrouting\/urlrequestdata\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/urlrequestdata","title":"URLRequestData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlroutingclient\/init(request:decoder:)","title":"init(request: (Route) async throws -> (Data, URLResponse), decoder: JSONDecoder)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlroutingclient\/data(for:)","title":"func data(for: Route) async throws -> (value: Data, response: URLResponse)","type":"method"},{"path":"\/documentation\/urlrouting\/urlroutingclient\/decodedresponse(for:as:decoder:)","title":"func decodedResponse<Value>(for: Route, as: Value.Type, decoder: JSONDecoder?) async throws -> (value: Value, response: URLResponse)","type":"method"},{"path":"\/documentation\/urlrouting\/urlroutingclient\/override(_:with:)-11tzf","title":"func override(Route, with: () throws -> Result<(data: Data, response: URLResponse), URLError>) -> URLRoutingClient<Route>","type":"method"},{"path":"\/documentation\/urlrouting\/urlroutingclient\/override(_:with:)-2kgvt","title":"func override<Value>((Route) -> Value?, with: (Value) throws -> Result<(data: Data, response: URLResponse), URLError>) -> URLRoutingClient<Route>","type":"method"},{"path":"\/documentation\/urlrouting\/urlroutingclient\/override(_:with:)-8nxa1","title":"func override((Route) -> Bool, with: () throws -> Result<(data: Data, response: URLResponse), URLError>) -> URLRoutingClient<Route>","type":"method"},{"path":"\/documentation\/urlrouting\/urlroutingclient\/request(_:as:decoder:)","title":"func request<Value>(Route, as: Value.Type, decoder: JSONDecoder?) async throws -> (value: Value, response: URLResponse)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlroutingclient\/failing","title":"static var failing: URLRoutingClient<Route>","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlroutingclient\/live(router:session:decoder:)","title":"static func live<R>(router: R, session: URLSession, decoder: JSONDecoder) -> URLRoutingClient<Route>","type":"method"}],"path":"\/documentation\/urlrouting\/urlroutingclient","title":"URLRoutingClient","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlroutingdecodingerror\/bytes","title":"let bytes: Data","type":"property"},{"path":"\/documentation\/urlrouting\/urlroutingdecodingerror\/response","title":"let response: URLResponse","type":"property"},{"path":"\/documentation\/urlrouting\/urlroutingdecodingerror\/underlyingerror","title":"let underlyingError: Error","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/urlroutingdecodingerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/urlrouting\/urlroutingdecodingerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/urlroutingdecodingerror","title":"URLRoutingDecodingError","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/router","title":"Router","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/parse(_:)","title":"func parse(inout URLRequestData) throws -> ComponentParser.Output","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/map(_:)-3m1j5","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/map(_:)-888k2","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/map(_:)-9vefi","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/body-swift.typealias","title":"PathBuilder.Component.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/component\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/print(_:into:)","title":"func print(ComponentParser.Output, into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/component\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/component\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/component","title":"PathBuilder.Component","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/init(_:_:)","title":"init(P0, P1)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/p1","title":"let p1: P1","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/map(_:)-56pe2","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/map(_:)-5mds2","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/map(_:)-7j7dq","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/body-swift.typealias","title":"PathBuilder.PathZipOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/print(_:into:)","title":"func print((P0.Output, P1.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoo","title":"PathBuilder.PathZipOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/init(_:_:_:)","title":"init(P0, P1, P2)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/p2","title":"let p2: P2","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P2.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/map(_:)-16uo1","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/map(_:)-3x8e9","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/map(_:)-8sly5","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/body-swift.typealias","title":"PathBuilder.PathZipOOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/print(_:into:)","title":"func print((P0.Output, P1.Output, P2.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooo","title":"PathBuilder.PathZipOOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/init(_:_:_:_:)","title":"init(P0, P1, P2, P3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/p3","title":"let p3: P3","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P2.Output, P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/map(_:)-4f5te","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/map(_:)-5as9k","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/map(_:)-87cii","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/body-swift.typealias","title":"PathBuilder.PathZipOOOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/print(_:into:)","title":"func print((P0.Output, P1.Output, P2.Output, P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooo","title":"PathBuilder.PathZipOOOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P2.Output, P3.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/map(_:)-4586u","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/map(_:)-7f5ea","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/map(_:)-8mryt","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/body-swift.typealias","title":"PathBuilder.PathZipOOOOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/print(_:into:)","title":"func print((P0.Output, P1.Output, P2.Output, P3.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooo","title":"PathBuilder.PathZipOOOOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P2.Output, P3.Output, P4.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/map(_:)-7dghi","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/map(_:)-cvpk","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/map(_:)-l3gq","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/body-swift.typealias","title":"PathBuilder.PathZipOOOOOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/print(_:into:)","title":"func print((P0.Output, P1.Output, P2.Output, P3.Output, P4.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooooo","title":"PathBuilder.PathZipOOOOOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P2.Output, P3.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/map(_:)-7doc4","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/map(_:)-csw6","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/map(_:)-kwc8","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/body-swift.typealias","title":"PathBuilder.PathZipOOOOOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/print(_:into:)","title":"func print((P0.Output, P1.Output, P2.Output, P3.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooooov","title":"PathBuilder.PathZipOOOOOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P2.Output, P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/map(_:)-45atw","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/map(_:)-7fdg0","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/map(_:)-8mpa1","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/body-swift.typealias","title":"PathBuilder.PathZipOOOOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/print(_:into:)","title":"func print((P0.Output, P1.Output, P2.Output, P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooov","title":"PathBuilder.PathZipOOOOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P2.Output, P3.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/map(_:)-19dez","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/map(_:)-6ibev","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/map(_:)-9o71k","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/body-swift.typealias","title":"PathBuilder.PathZipOOOOVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/print(_:into:)","title":"func print((P0.Output, P1.Output, P2.Output, P3.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovo","title":"PathBuilder.PathZipOOOOVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P2.Output, P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/map(_:)-19asj","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/map(_:)-6idl3","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/map(_:)-9nzve","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/body-swift.typealias","title":"PathBuilder.PathZipOOOOVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/print(_:into:)","title":"func print((P0.Output, P1.Output, P2.Output, P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoooovv","title":"PathBuilder.PathZipOOOOVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/init(_:_:_:_:)","title":"init(P0, P1, P2, P3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/p3","title":"let p3: P3","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P2.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/map(_:)-4f81g","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/map(_:)-5aq2y","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/map(_:)-875jc","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/body-swift.typealias","title":"PathBuilder.PathZipOOOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/print(_:into:)","title":"func print((P0.Output, P1.Output, P2.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooov","title":"PathBuilder.PathZipOOOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P2.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/map(_:)-1q453","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/map(_:)-6k0kj","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/map(_:)-9h344","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/body-swift.typealias","title":"PathBuilder.PathZipOOOVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/print(_:into:)","title":"func print((P0.Output, P1.Output, P2.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovo","title":"PathBuilder.PathZipOOOVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P2.Output, P4.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/map(_:)-13yzx","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/map(_:)-2zbdh","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/map(_:)-4rm9f","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/body-swift.typealias","title":"PathBuilder.PathZipOOOVOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/print(_:into:)","title":"func print((P0.Output, P1.Output, P2.Output, P4.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovoo","title":"PathBuilder.PathZipOOOVOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P2.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/map(_:)-13w69","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/map(_:)-2z3mx","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/map(_:)-4rk2z","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/body-swift.typealias","title":"PathBuilder.PathZipOOOVOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/print(_:into:)","title":"func print((P0.Output, P1.Output, P2.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovov","title":"PathBuilder.PathZipOOOVOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P2.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/map(_:)-1qb87","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/map(_:)-6k2qz","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/map(_:)-9hazm","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/body-swift.typealias","title":"PathBuilder.PathZipOOOVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/print(_:into:)","title":"func print((P0.Output, P1.Output, P2.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovv","title":"PathBuilder.PathZipOOOVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P2.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/map(_:)-1ya4c","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/map(_:)-2b1bo","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/map(_:)-5ha6q","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/body-swift.typealias","title":"PathBuilder.PathZipOOOVVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/print(_:into:)","title":"func print((P0.Output, P1.Output, P2.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvo","title":"PathBuilder.PathZipOOOVVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P2.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/map(_:)-1yhwq","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/map(_:)-2au4y","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/map(_:)-5hccw","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/body-swift.typealias","title":"PathBuilder.PathZipOOOVVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/print(_:into:)","title":"func print((P0.Output, P1.Output, P2.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipooovvv","title":"PathBuilder.PathZipOOOVVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/init(_:_:_:)","title":"init(P0, P1, P2)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/p2","title":"let p2: P2","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/map(_:)-16nj9","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/map(_:)-3xg1x","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/map(_:)-8sea1","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/body-swift.typealias","title":"PathBuilder.PathZipOOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/print(_:into:)","title":"func print((P0.Output, P1.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoov","title":"PathBuilder.PathZipOOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/init(_:_:_:_:)","title":"init(P0, P1, P2, P3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/p3","title":"let p3: P3","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/map(_:)-2uuft","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/map(_:)-6sw37","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/map(_:)-emi2","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/body-swift.typealias","title":"PathBuilder.PathZipOOVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/print(_:into:)","title":"func print((P0.Output, P1.Output, P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovo","title":"PathBuilder.PathZipOOVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P3.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/map(_:)-15nwp","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/map(_:)-4woan","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/map(_:)-7b01z","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/body-swift.typealias","title":"PathBuilder.PathZipOOVOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/print(_:into:)","title":"func print((P0.Output, P1.Output, P3.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoo","title":"PathBuilder.PathZipOOVOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P3.Output, P4.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/map(_:)-1la5j","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/map(_:)-3izrr","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/map(_:)-8j1ee","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/body-swift.typealias","title":"PathBuilder.PathZipOOVOOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/print(_:into:)","title":"func print((P0.Output, P1.Output, P3.Output, P4.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovooo","title":"PathBuilder.PathZipOOVOOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P3.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/map(_:)-1l753","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/map(_:)-3irtj","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/map(_:)-8j91w","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/body-swift.typealias","title":"PathBuilder.PathZipOOVOOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/print(_:into:)","title":"func print((P0.Output, P1.Output, P3.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovoov","title":"PathBuilder.PathZipOOVOOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/map(_:)-15l3x","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/map(_:)-4wvtb","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/map(_:)-7b293","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/body-swift.typealias","title":"PathBuilder.PathZipOOVOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/print(_:into:)","title":"func print((P0.Output, P1.Output, P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov","title":"PathBuilder.PathZipOOVOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P3.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/map(_:)-19mp2","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/map(_:)-7p04n","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/map(_:)-wzt2","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/body-swift.typealias","title":"PathBuilder.PathZipOOVOVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/print(_:into:)","title":"func print((P0.Output, P1.Output, P3.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovo","title":"PathBuilder.PathZipOOVOVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/map(_:)-19khw","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/map(_:)-7p2av","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/map(_:)-wsn8","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/body-swift.typealias","title":"PathBuilder.PathZipOOVOVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/print(_:into:)","title":"func print((P0.Output, P1.Output, P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv","title":"PathBuilder.PathZipOOVOVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/init(_:_:_:_:)","title":"init(P0, P1, P2, P3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/p3","title":"let p3: P3","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/map(_:)-2uwml","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/map(_:)-6stwz","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/map(_:)-etvg","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/body-swift.typealias","title":"PathBuilder.PathZipOOVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/print(_:into:)","title":"func print((P0.Output, P1.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovv","title":"PathBuilder.PathZipOOVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/map(_:)-1zz2w","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/map(_:)-41j7y","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/map(_:)-9q43q","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/body-swift.typealias","title":"PathBuilder.PathZipOOVVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/print(_:into:)","title":"func print((P0.Output, P1.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvo","title":"PathBuilder.PathZipOOVVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P4.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/map(_:)-614d0","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/map(_:)-7ei4v","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/map(_:)-9v5z7","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/body-swift.typealias","title":"PathBuilder.PathZipOOVVOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/print(_:into:)","title":"func print((P0.Output, P1.Output, P4.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvoo","title":"PathBuilder.PathZipOOVVOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/map(_:)-6126i","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/map(_:)-7ekun","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/map(_:)-9v3cz","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/body-swift.typealias","title":"PathBuilder.PathZipOOVVOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/print(_:into:)","title":"func print((P0.Output, P1.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvov","title":"PathBuilder.PathZipOOVVOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/map(_:)-2070u","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/map(_:)-41le8","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/map(_:)-9q6v4","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/body-swift.typealias","title":"PathBuilder.PathZipOOVVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/print(_:into:)","title":"func print((P0.Output, P1.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvv","title":"PathBuilder.PathZipOOVVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/map(_:)-6pofp","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/map(_:)-9nl6m","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/map(_:)-pvv7","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/body-swift.typealias","title":"PathBuilder.PathZipOOVVVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/print(_:into:)","title":"func print((P0.Output, P1.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvo","title":"PathBuilder.PathZipOOVVVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P1.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/map(_:)-6pqlt","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/map(_:)-9nics","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/map(_:)-q3ij","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/body-swift.typealias","title":"PathBuilder.PathZipOOVVVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/print(_:into:)","title":"func print((P0.Output, P1.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovvvv","title":"PathBuilder.PathZipOOVVVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/init(_:_:)","title":"init(P0, P1)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/p1","title":"let p1: P1","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/map(_:)-56x88","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/map(_:)-5mb30","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/map(_:)-7j0bw","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/body-swift.typealias","title":"PathBuilder.PathZipOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/print(_:into:)","title":"func print((P0.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipov","title":"PathBuilder.PathZipOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/init(_:_:_:)","title":"init(P0, P1, P2)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/p2","title":"let p2: P2","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P2.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/map(_:)-16qvx","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/map(_:)-3fxo0","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/map(_:)-4lsbk","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/body-swift.typealias","title":"PathBuilder.PathZipOVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/print(_:into:)","title":"func print((P0.Output, P2.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovo","title":"PathBuilder.PathZipOVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/init(_:_:_:_:)","title":"init(P0, P1, P2, P3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/p3","title":"let p3: P3","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P2.Output, P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/map(_:)-35och","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/map(_:)-7su16","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/map(_:)-9idkf","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/body-swift.typealias","title":"PathBuilder.PathZipOVOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/print(_:into:)","title":"func print((P0.Output, P2.Output, P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo","title":"PathBuilder.PathZipOVOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P2.Output, P3.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/map(_:)-1mz7n","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/map(_:)-2e100","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/map(_:)-820zt","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/body-swift.typealias","title":"PathBuilder.PathZipOVOOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/print(_:into:)","title":"func print((P0.Output, P2.Output, P3.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooo","title":"PathBuilder.PathZipOVOOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P2.Output, P3.Output, P4.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/map(_:)-5g1tb","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/map(_:)-7fg5w","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/map(_:)-7zv3c","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/body-swift.typealias","title":"PathBuilder.PathZipOVOOOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/print(_:into:)","title":"func print((P0.Output, P2.Output, P3.Output, P4.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoooo","title":"PathBuilder.PathZipOVOOOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P2.Output, P3.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/map(_:)-5g4xb","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/map(_:)-7fn7a","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/map(_:)-7zna2","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/body-swift.typealias","title":"PathBuilder.PathZipOVOOOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/print(_:into:)","title":"func print((P0.Output, P2.Output, P3.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovooov","title":"PathBuilder.PathZipOVOOOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P2.Output, P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/map(_:)-1mw4b","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/map(_:)-2e36m","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/map(_:)-823st","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/body-swift.typealias","title":"PathBuilder.PathZipOVOOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/print(_:into:)","title":"func print((P0.Output, P2.Output, P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoov","title":"PathBuilder.PathZipOVOOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P2.Output, P3.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/map(_:)-56d6t","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/map(_:)-7bkzt","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/map(_:)-7mxge","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/body-swift.typealias","title":"PathBuilder.PathZipOVOOVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/print(_:into:)","title":"func print((P0.Output, P2.Output, P3.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo","title":"PathBuilder.PathZipOVOOVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P2.Output, P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/map(_:)-56b35","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/map(_:)-7bdst","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/map(_:)-7muh8","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/body-swift.typealias","title":"PathBuilder.PathZipOVOOVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/print(_:into:)","title":"func print((P0.Output, P2.Output, P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovv","title":"PathBuilder.PathZipOVOOVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/init(_:_:_:_:)","title":"init(P0, P1, P2, P3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/p3","title":"let p3: P3","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P2.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/map(_:)-35lml","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/map(_:)-7sn18","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/map(_:)-9ifr3","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/body-swift.typealias","title":"PathBuilder.PathZipOVOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/print(_:into:)","title":"func print((P0.Output, P2.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovov","title":"PathBuilder.PathZipOVOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P2.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/map(_:)-3a9lt","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/map(_:)-5mwy0","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/map(_:)-yote","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/body-swift.typealias","title":"PathBuilder.PathZipOVOVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/print(_:into:)","title":"func print((P0.Output, P2.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovo","title":"PathBuilder.PathZipOVOVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P2.Output, P4.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/map(_:)-2yw8q","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/map(_:)-6pz9m","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/map(_:)-tozl","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/body-swift.typealias","title":"PathBuilder.PathZipOVOVOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/print(_:into:)","title":"func print((P0.Output, P2.Output, P4.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovoo","title":"PathBuilder.PathZipOVOVOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P2.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/map(_:)-2yu20","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/map(_:)-6prjo","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/map(_:)-thql","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/body-swift.typealias","title":"PathBuilder.PathZipOVOVOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/print(_:into:)","title":"func print((P0.Output, P2.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovov","title":"PathBuilder.PathZipOVOVOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P2.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/map(_:)-3ahlp","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/map(_:)-5mz4q","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/map(_:)-yhr4","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/body-swift.typealias","title":"PathBuilder.PathZipOVOVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/print(_:into:)","title":"func print((P0.Output, P2.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovv","title":"PathBuilder.PathZipOVOVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P2.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/map(_:)-1hz1c","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/map(_:)-4ittn","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/map(_:)-561aj","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/body-swift.typealias","title":"PathBuilder.PathZipOVOVVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/print(_:into:)","title":"func print((P0.Output, P2.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo","title":"PathBuilder.PathZipOVOVVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P2.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/map(_:)-1hwce","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/map(_:)-4irmz","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/map(_:)-55to3","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/body-swift.typealias","title":"PathBuilder.PathZipOVOVVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/print(_:into:)","title":"func print((P0.Output, P2.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvv","title":"PathBuilder.PathZipOVOVVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/init(_:_:_:)","title":"init(P0, P1, P2)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/p2","title":"let p2: P2","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/map(_:)-16ymp","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/map(_:)-3g4t2","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/map(_:)-4lkna","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/body-swift.typealias","title":"PathBuilder.PathZipOVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/print(_:into:)","title":"func print((P0.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovv","title":"PathBuilder.PathZipOVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/init(_:_:_:_:)","title":"init(P0, P1, P2, P3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/p3","title":"let p3: P3","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/map(_:)-8h44r","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/map(_:)-8spu6","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/map(_:)-xp68","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/body-swift.typealias","title":"PathBuilder.PathZipOVVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/print(_:into:)","title":"func print((P0.Output, P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvo","title":"PathBuilder.PathZipOVVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P3.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/map(_:)-2pexo","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/map(_:)-62tiw","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/map(_:)-6arm8","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/body-swift.typealias","title":"PathBuilder.PathZipOVVOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/print(_:into:)","title":"func print((P0.Output, P3.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoo","title":"PathBuilder.PathZipOVVOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P3.Output, P4.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/map(_:)-4tbd9","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/map(_:)-6sybh","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/map(_:)-78wzr","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/body-swift.typealias","title":"PathBuilder.PathZipOVVOOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/print(_:into:)","title":"func print((P0.Output, P3.Output, P4.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvooo","title":"PathBuilder.PathZipOVVOOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P3.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/map(_:)-4t3eh","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/map(_:)-6sr55","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/map(_:)-7952f","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/body-swift.typealias","title":"PathBuilder.PathZipOVVOOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/print(_:into:)","title":"func print((P0.Output, P3.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvoov","title":"PathBuilder.PathZipOVVOOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/map(_:)-2p7tu","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/map(_:)-62rcm","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/map(_:)-6ajva","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/body-swift.typealias","title":"PathBuilder.PathZipOVVOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/print(_:into:)","title":"func print((P0.Output, P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvov","title":"PathBuilder.PathZipOVVOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P3.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/map(_:)-6elue","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/map(_:)-785ak","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/map(_:)-7h8bg","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/body-swift.typealias","title":"PathBuilder.PathZipOVVOVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/print(_:into:)","title":"func print((P0.Output, P3.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovo","title":"PathBuilder.PathZipOVVOVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/map(_:)-6ej5g","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/map(_:)-78d1e","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/map(_:)-7h0mm","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/body-swift.typealias","title":"PathBuilder.PathZipOVVOVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/print(_:into:)","title":"func print((P0.Output, P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvovv","title":"PathBuilder.PathZipOVVOVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/init(_:_:_:_:)","title":"init(P0, P1, P2, P3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/p3","title":"let p3: P3","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/map(_:)-8gwij","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/map(_:)-8snnk","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/map(_:)-xrz2","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/body-swift.typealias","title":"PathBuilder.PathZipOVVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/print(_:into:)","title":"func print((P0.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvv","title":"PathBuilder.PathZipOVVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/map(_:)-1u031","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/map(_:)-5m7ld","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/map(_:)-6rdax","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/body-swift.typealias","title":"PathBuilder.PathZipOVVVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/print(_:into:)","title":"func print((P0.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvo","title":"PathBuilder.PathZipOVVVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P4.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/map(_:)-54x0a","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/map(_:)-55t0b","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/map(_:)-5s5bi","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/body-swift.typealias","title":"PathBuilder.PathZipOVVVOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/print(_:into:)","title":"func print((P0.Output, P4.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvoo","title":"PathBuilder.PathZipOVVVOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/map(_:)-5543w","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/map(_:)-55vu3","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/map(_:)-5s7fc","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/body-swift.typealias","title":"PathBuilder.PathZipOVVVOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/print(_:into:)","title":"func print((P0.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvov","title":"PathBuilder.PathZipOVVVOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/map(_:)-1u721","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/map(_:)-5mfed","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/map(_:)-6rfh1","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/body-swift.typealias","title":"PathBuilder.PathZipOVVVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/print(_:into:)","title":"func print((P0.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvv","title":"PathBuilder.PathZipOVVVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/map(_:)-2y1nv","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/map(_:)-49aei","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/map(_:)-85vhr","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/body-swift.typealias","title":"PathBuilder.PathZipOVVVVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/print(_:into:)","title":"func print((P0.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvo","title":"PathBuilder.PathZipOVVVVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P0.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/map(_:)-2xuhn","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/map(_:)-497mk","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/map(_:)-85tb3","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/body-swift.typealias","title":"PathBuilder.PathZipOVVVVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/print(_:into:)","title":"func print((P0.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipovvvvv","title":"PathBuilder.PathZipOVVVVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/init(_:_:)","title":"init(P0, P1)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/p1","title":"let p1: P1","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/map(_:)-4bkhn","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/map(_:)-4y3qb","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/map(_:)-87hmn","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/body-swift.typealias","title":"PathBuilder.PathZipVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/print(_:into:)","title":"func print((P1.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvo","title":"PathBuilder.PathZipVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/init(_:_:_:)","title":"init(P0, P1, P2)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/p2","title":"let p2: P2","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P2.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/map(_:)-2ks6u","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/map(_:)-4c205","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/map(_:)-79tp6","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/body-swift.typealias","title":"PathBuilder.PathZipVOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/print(_:into:)","title":"func print((P1.Output, P2.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoo","title":"PathBuilder.PathZipVOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/init(_:_:_:_:)","title":"init(P0, P1, P2, P3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/p3","title":"let p3: P3","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P2.Output, P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/map(_:)-3v8l8","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/map(_:)-5gpg6","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/map(_:)-8t0pv","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/body-swift.typealias","title":"PathBuilder.PathZipVOOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/print(_:into:)","title":"func print((P1.Output, P2.Output, P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooo","title":"PathBuilder.PathZipVOOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P2.Output, P3.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/map(_:)-20n65","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/map(_:)-79fo7","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/map(_:)-81k78","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/body-swift.typealias","title":"PathBuilder.PathZipVOOOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/print(_:into:)","title":"func print((P1.Output, P2.Output, P3.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo","title":"PathBuilder.PathZipVOOOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P2.Output, P3.Output, P4.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/map(_:)-1fjus","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/map(_:)-1ns45","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/map(_:)-6plwg","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/body-swift.typealias","title":"PathBuilder.PathZipVOOOOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/print(_:into:)","title":"func print((P1.Output, P2.Output, P3.Output, P4.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooooo","title":"PathBuilder.PathZipVOOOOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P2.Output, P3.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/map(_:)-1fc7e","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/map(_:)-1nv01","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/map(_:)-6pt5q","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/body-swift.typealias","title":"PathBuilder.PathZipVOOOOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/print(_:into:)","title":"func print((P1.Output, P2.Output, P3.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooov","title":"PathBuilder.PathZipVOOOOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P2.Output, P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/map(_:)-20q6x","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/map(_:)-79cmv","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/map(_:)-81c9y","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/body-swift.typealias","title":"PathBuilder.PathZipVOOOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/print(_:into:)","title":"func print((P1.Output, P2.Output, P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooov","title":"PathBuilder.PathZipVOOOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P2.Output, P3.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/map(_:)-93m5d","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/map(_:)-95sl0","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/map(_:)-975qt","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/body-swift.typealias","title":"PathBuilder.PathZipVOOOVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/print(_:into:)","title":"func print((P1.Output, P2.Output, P3.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovo","title":"PathBuilder.PathZipVOOOVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P2.Output, P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/map(_:)-93oz1","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/map(_:)-95qeu","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/map(_:)-97cvd","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/body-swift.typealias","title":"PathBuilder.PathZipVOOOVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/print(_:into:)","title":"func print((P1.Output, P2.Output, P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvooovv","title":"PathBuilder.PathZipVOOOVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/init(_:_:_:_:)","title":"init(P0, P1, P2, P3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/p3","title":"let p3: P3","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P2.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/map(_:)-3vbda","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/map(_:)-5gwkw","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/map(_:)-8ssxn","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/body-swift.typealias","title":"PathBuilder.PathZipVOOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/print(_:into:)","title":"func print((P1.Output, P2.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoov","title":"PathBuilder.PathZipVOOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P2.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/map(_:)-7da5h","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/map(_:)-83qiu","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/map(_:)-9m8i5","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/body-swift.typealias","title":"PathBuilder.PathZipVOOVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/print(_:into:)","title":"func print((P1.Output, P2.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovo","title":"PathBuilder.PathZipVOOVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P2.Output, P4.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/map(_:)-1xet6","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/map(_:)-5b2fm","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/map(_:)-76fc3","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/body-swift.typealias","title":"PathBuilder.PathZipVOOVOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/print(_:into:)","title":"func print((P1.Output, P2.Output, P4.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovoo","title":"PathBuilder.PathZipVOOVOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P2.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/map(_:)-1xmlw","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/map(_:)-5b5a4","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/map(_:)-76hhf","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/body-swift.typealias","title":"PathBuilder.PathZipVOOVOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/print(_:into:)","title":"func print((P1.Output, P2.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovov","title":"PathBuilder.PathZipVOOVOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P2.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/map(_:)-7d2sh","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/map(_:)-83yjk","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/map(_:)-9mfk1","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/body-swift.typealias","title":"PathBuilder.PathZipVOOVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/print(_:into:)","title":"func print((P1.Output, P2.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovv","title":"PathBuilder.PathZipVOOVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P2.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/map(_:)-7k5cz","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/map(_:)-9i67s","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/map(_:)-9mnaa","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/body-swift.typealias","title":"PathBuilder.PathZipVOOVVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/print(_:into:)","title":"func print((P1.Output, P2.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo","title":"PathBuilder.PathZipVOOVVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P2.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/map(_:)-7k2mb","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/map(_:)-9hyei","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/map(_:)-9mq04","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/body-swift.typealias","title":"PathBuilder.PathZipVOOVVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/print(_:into:)","title":"func print((P1.Output, P2.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvv","title":"PathBuilder.PathZipVOOVVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/init(_:_:_:)","title":"init(P0, P1, P2)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/p2","title":"let p2: P2","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/map(_:)-2kz84","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/map(_:)-4c4xl","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/map(_:)-79vxk","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/body-swift.typealias","title":"PathBuilder.PathZipVOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/print(_:into:)","title":"func print((P1.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov","title":"PathBuilder.PathZipVOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/init(_:_:_:_:)","title":"init(P0, P1, P2, P3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/p3","title":"let p3: P3","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/map(_:)-2ypsd","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/map(_:)-37mhz","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/map(_:)-84gn6","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/body-swift.typealias","title":"PathBuilder.PathZipVOVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/print(_:into:)","title":"func print((P1.Output, P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovo","title":"PathBuilder.PathZipVOVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P3.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/map(_:)-2tk6x","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/map(_:)-5xare","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/map(_:)-vdwd","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/body-swift.typealias","title":"PathBuilder.PathZipVOVOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/print(_:into:)","title":"func print((P1.Output, P3.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoo","title":"PathBuilder.PathZipVOVOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P3.Output, P4.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/map(_:)-8h8xk","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/map(_:)-8jw9","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/map(_:)-99asm","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/body-swift.typealias","title":"PathBuilder.PathZipVOVOOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/print(_:into:)","title":"func print((P1.Output, P3.Output, P4.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovooo","title":"PathBuilder.PathZipVOVOOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P3.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/map(_:)-8h1sa","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/map(_:)-8hph","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/map(_:)-99cyw","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/body-swift.typealias","title":"PathBuilder.PathZipVOVOOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/print(_:into:)","title":"func print((P1.Output, P3.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovoov","title":"PathBuilder.PathZipVOVOOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/map(_:)-2tmct","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/map(_:)-5xibs","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/map(_:)-v6y1","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/body-swift.typealias","title":"PathBuilder.PathZipVOVOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/print(_:into:)","title":"func print((P1.Output, P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovov","title":"PathBuilder.PathZipVOVOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P3.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/map(_:)-2fpag","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/map(_:)-4u8k","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/map(_:)-95j89","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/body-swift.typealias","title":"PathBuilder.PathZipVOVOVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/print(_:into:)","title":"func print((P1.Output, P3.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovo","title":"PathBuilder.PathZipVOVOVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/map(_:)-2fhbq","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/map(_:)-523a","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/map(_:)-95g6t","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/body-swift.typealias","title":"PathBuilder.PathZipVOVOVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/print(_:into:)","title":"func print((P1.Output, P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovovv","title":"PathBuilder.PathZipVOVOVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/init(_:_:_:_:)","title":"init(P0, P1, P2, P3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/p3","title":"let p3: P3","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/map(_:)-2yn21","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/map(_:)-37f47","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/map(_:)-84oe8","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/body-swift.typealias","title":"PathBuilder.PathZipVOVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/print(_:into:)","title":"func print((P1.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovv","title":"PathBuilder.PathZipVOVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/map(_:)-1jo1o","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/map(_:)-539cb","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/map(_:)-57k8o","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/body-swift.typealias","title":"PathBuilder.PathZipVOVVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/print(_:into:)","title":"func print((P1.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvo","title":"PathBuilder.PathZipVOVVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P4.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/map(_:)-2b4uu","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/map(_:)-9koly","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/map(_:)-vvty","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/body-swift.typealias","title":"PathBuilder.PathZipVOVVOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/print(_:into:)","title":"func print((P1.Output, P4.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvoo","title":"PathBuilder.PathZipVOVVOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/map(_:)-2bc1g","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/map(_:)-9khko","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/map(_:)-vo3o","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/body-swift.typealias","title":"PathBuilder.PathZipVOVVOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/print(_:into:)","title":"func print((P1.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov","title":"PathBuilder.PathZipVOVVOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/map(_:)-1jl76","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/map(_:)-53bir","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/map(_:)-57nbi","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/body-swift.typealias","title":"PathBuilder.PathZipVOVVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/print(_:into:)","title":"func print((P1.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv","title":"PathBuilder.PathZipVOVVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/map(_:)-21vr","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/map(_:)-7lqf","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/map(_:)-8qdif","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/body-swift.typealias","title":"PathBuilder.PathZipVOVVVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/print(_:into:)","title":"func print((P1.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvo","title":"PathBuilder.PathZipVOVVVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P1.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/map(_:)-1zqf","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/map(_:)-7emf","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/map(_:)-8qknb","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/body-swift.typealias","title":"PathBuilder.PathZipVOVVVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/print(_:into:)","title":"func print((P1.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvvv","title":"PathBuilder.PathZipVOVVVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/init(_:_:)","title":"init(P0, P1)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/p1","title":"let p1: P1","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/parse(_:)","title":"func parse(inout URLRequestData) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/map(_:)-4bmkj","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/map(_:)-4xwo3","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/map(_:)-87eov","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/body-swift.typealias","title":"PathBuilder.PathZipVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/print(_:into:)","title":"func print((), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvv","title":"PathBuilder.PathZipVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/init(_:_:_:)","title":"init(P0, P1, P2)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/p2","title":"let p2: P2","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P2.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/map(_:)-3f39j","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/map(_:)-3fjdg","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/map(_:)-6mddn","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/body-swift.typealias","title":"PathBuilder.PathZipVVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/print(_:into:)","title":"func print((P2.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvo","title":"PathBuilder.PathZipVVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/init(_:_:_:_:)","title":"init(P0, P1, P2, P3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/p3","title":"let p3: P3","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P2.Output, P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/map(_:)-3iqxc","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/map(_:)-5tfq4","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/map(_:)-7kpmj","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/body-swift.typealias","title":"PathBuilder.PathZipVVOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/print(_:into:)","title":"func print((P2.Output, P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoo","title":"PathBuilder.PathZipVVOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P2.Output, P3.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/map(_:)-2oizo","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/map(_:)-3q1eq","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/map(_:)-7am5f","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/body-swift.typealias","title":"PathBuilder.PathZipVVOOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/print(_:into:)","title":"func print((P2.Output, P3.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooo","title":"PathBuilder.PathZipVVOOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P2.Output, P3.Output, P4.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/map(_:)-301u6","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/map(_:)-3wq3d","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/map(_:)-48h42","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/body-swift.typealias","title":"PathBuilder.PathZipVVOOOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/print(_:into:)","title":"func print((P2.Output, P3.Output, P4.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo","title":"PathBuilder.PathZipVVOOOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P2.Output, P3.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/map(_:)-2zz4s","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/map(_:)-3wj39","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/map(_:)-48oqk","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/body-swift.typealias","title":"PathBuilder.PathZipVVOOOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/print(_:into:)","title":"func print((P2.Output, P3.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvooov","title":"PathBuilder.PathZipVVOOOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P2.Output, P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/map(_:)-2ol62","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/map(_:)-3q484","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/map(_:)-7atyz","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/body-swift.typealias","title":"PathBuilder.PathZipVVOOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/print(_:into:)","title":"func print((P2.Output, P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoov","title":"PathBuilder.PathZipVVOOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P2.Output, P3.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/map(_:)-1tn1f","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/map(_:)-31b1k","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/map(_:)-3wkm7","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/body-swift.typealias","title":"PathBuilder.PathZipVVOOVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/print(_:into:)","title":"func print((P2.Output, P3.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovo","title":"PathBuilder.PathZipVVOOVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P2.Output, P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/map(_:)-1tf8j","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/map(_:)-31iii","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/map(_:)-3ws9b","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/body-swift.typealias","title":"PathBuilder.PathZipVVOOVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/print(_:into:)","title":"func print((P2.Output, P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv","title":"PathBuilder.PathZipVVOOVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/init(_:_:_:_:)","title":"init(P0, P1, P2, P3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/p3","title":"let p3: P3","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P2.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/map(_:)-3iiz6","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/map(_:)-5tiju","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/map(_:)-7kx7n","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/body-swift.typealias","title":"PathBuilder.PathZipVVOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/print(_:into:)","title":"func print((P2.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvov","title":"PathBuilder.PathZipVVOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P2.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/map(_:)-19tgj","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/map(_:)-3jo45","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/map(_:)-6gb1u","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/body-swift.typealias","title":"PathBuilder.PathZipVVOVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/print(_:into:)","title":"func print((P2.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovo","title":"PathBuilder.PathZipVVOVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P2.Output, P4.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/map(_:)-3lc2b","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/map(_:)-90o8o","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/map(_:)-9br11","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/body-swift.typealias","title":"PathBuilder.PathZipVVOVOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/print(_:into:)","title":"func print((P2.Output, P4.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovoo","title":"PathBuilder.PathZipVVOVOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P2.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/map(_:)-3le8r","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/map(_:)-90vdi","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/map(_:)-9bys1","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/body-swift.typealias","title":"PathBuilder.PathZipVVOVOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/print(_:into:)","title":"func print((P2.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovov","title":"PathBuilder.PathZipVVOVOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P2.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/map(_:)-19vlv","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/map(_:)-3jvrl","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/map(_:)-6g89c","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/body-swift.typealias","title":"PathBuilder.PathZipVVOVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/print(_:into:)","title":"func print((P2.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovv","title":"PathBuilder.PathZipVVOVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P2.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/map(_:)-1haly","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/map(_:)-4hkyq","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/map(_:)-8gm3o","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/body-swift.typealias","title":"PathBuilder.PathZipVVOVVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/print(_:into:)","title":"func print((P2.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvo","title":"PathBuilder.PathZipVVOVVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P2.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/map(_:)-1hdas","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/map(_:)-4hsn4","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/map(_:)-8goa2","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/body-swift.typealias","title":"PathBuilder.PathZipVVOVVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/print(_:into:)","title":"func print((P2.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvovvv","title":"PathBuilder.PathZipVVOVVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/init(_:_:_:)","title":"init(P0, P1, P2)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/p2","title":"let p2: P2","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/parse(_:)","title":"func parse(inout URLRequestData) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/map(_:)-3ew3r","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/map(_:)-3fgaa","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/map(_:)-6mb77","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/body-swift.typealias","title":"PathBuilder.PathZipVVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/print(_:into:)","title":"func print((), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvv","title":"PathBuilder.PathZipVVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/init(_:_:_:_:)","title":"init(P0, P1, P2, P3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/p3","title":"let p3: P3","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/map(_:)-3ffh9","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/map(_:)-5xkup","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/map(_:)-6o6sq","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/body-swift.typealias","title":"PathBuilder.PathZipVVVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/print(_:into:)","title":"func print((P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo","title":"PathBuilder.PathZipVVVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P3.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/map(_:)-1xodr","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/map(_:)-56m66","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/map(_:)-87k9h","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/body-swift.typealias","title":"PathBuilder.PathZipVVVOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/print(_:into:)","title":"func print((P3.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoo","title":"PathBuilder.PathZipVVVOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P3.Output, P4.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/map(_:)-4petk","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/map(_:)-8jpb1","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/map(_:)-e6wj","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/body-swift.typealias","title":"PathBuilder.PathZipVVVOOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/print(_:into:)","title":"func print((P3.Output, P4.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvooo","title":"PathBuilder.PathZipVVVOOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P3.Output, P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/map(_:)-4phmm","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/map(_:)-8jwfd","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/map(_:)-e92r","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/body-swift.typealias","title":"PathBuilder.PathZipVVVOOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/print(_:into:)","title":"func print((P3.Output, P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvoov","title":"PathBuilder.PathZipVVVOOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/map(_:)-1xge7","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/map(_:)-56t7s","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/map(_:)-87d89","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/body-swift.typealias","title":"PathBuilder.PathZipVVVOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/print(_:into:)","title":"func print((P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvov","title":"PathBuilder.PathZipVVVOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P3.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/map(_:)-2aavd","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/map(_:)-9g830","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/map(_:)-9p87l","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/body-swift.typealias","title":"PathBuilder.PathZipVVVOVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/print(_:into:)","title":"func print((P3.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovo","title":"PathBuilder.PathZipVVVOVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P3.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/map(_:)-2ad25","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/map(_:)-9g0r6","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/map(_:)-9p619","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/body-swift.typealias","title":"PathBuilder.PathZipVVVOVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/print(_:into:)","title":"func print((P3.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvovv","title":"PathBuilder.PathZipVVVOVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/init(_:_:_:_:)","title":"init(P0, P1, P2, P3)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/p3","title":"let p3: P3","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/parse(_:)","title":"func parse(inout URLRequestData) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/map(_:)-3fhmp","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/map(_:)-5xsod","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/map(_:)-6o3w8","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/body-swift.typealias","title":"PathBuilder.PathZipVVVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/print(_:into:)","title":"func print((), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvv","title":"PathBuilder.PathZipVVVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/map(_:)-1943y","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/map(_:)-2zqmn","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/map(_:)-7b1gk","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/body-swift.typealias","title":"PathBuilder.PathZipVVVVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/print(_:into:)","title":"func print((P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo","title":"PathBuilder.PathZipVVVVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P4.Output, P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/map(_:)-4bwyj","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/map(_:)-4oi21","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/map(_:)-7nvvb","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/body-swift.typealias","title":"PathBuilder.PathZipVVVVOO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/print(_:into:)","title":"func print((P4.Output, P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo","title":"PathBuilder.PathZipVVVVOO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P4.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/map(_:)-4bpvv","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/map(_:)-4opvh","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/map(_:)-7nobb","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/body-swift.typealias","title":"PathBuilder.PathZipVVVVOV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/print(_:into:)","title":"func print((P4.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvov","title":"PathBuilder.PathZipVVVVOV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/init(_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/p4","title":"let p4: P4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/parse(_:)","title":"func parse(inout URLRequestData) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/map(_:)-19bvg","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/map(_:)-2zjgf","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/map(_:)-7b8li","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/body-swift.typealias","title":"PathBuilder.PathZipVVVVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/print(_:into:)","title":"func print((), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvv","title":"PathBuilder.PathZipVVVVV","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/parse(_:)","title":"func parse(inout URLRequestData) throws -> (P5.Output)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/map(_:)-5d22w","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/map(_:)-6ish6","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/map(_:)-6zc1i","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/body-swift.typealias","title":"PathBuilder.PathZipVVVVVO.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/print(_:into:)","title":"func print((P5.Output), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo","title":"PathBuilder.PathZipVVVVVO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/init(_:_:_:_:_:_:)","title":"init(P0, P1, P2, P3, P4, P5)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/p0","title":"let p0: P0","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/p1","title":"let p1: P1","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/p2","title":"let p2: P2","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/p3","title":"let p3: P3","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/p4","title":"let p4: P4","type":"property"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/p5","title":"let p5: P5","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/parse(_:)","title":"func parse(inout URLRequestData) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/body-swift.property","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/compactmap(_:)","title":"func compactMap<NewOutput>((Self.Output) -> NewOutput?) -> Parsers.CompactMap<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/erasetoanyparser()","title":"func eraseToAnyParser() -> AnyParser<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Parsers.Filter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/flatmap(_:)","title":"func flatMap<Input, NewParser>((Self.Output) -> NewParser) -> Parsers.FlatMap<NewParser, Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/map(_:)-5cu8u","title":"func map<NewOutput>((Self.Output) -> NewOutput) -> Parsers.Map<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/map(_:)-6izjw","title":"func map<NewOutput>(() -> NewOutput) -> Parsers.MapConstant<Self, NewOutput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/map(_:)-6zjn8","title":"func map<C>(C) -> Parsers.MapConversion<Self, C>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/match(path:)","title":"func match(path: String) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/match(request:)","title":"func match(request: URLRequest) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/match(url:)","title":"func match(url: URL) throws -> Self.Output","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/pipe(_:)","title":"func pipe<Downstream>(() -> Downstream) -> Parsers.Pipe<Self, Downstream>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/printing(_:)","title":"func printing((Self.Output, inout Self.Input) -> Void) -> Parsers.Print<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/pullback(_:)","title":"func pullback<NewInput>(WritableKeyPath<NewInput, Self.Input>) -> Parsers.Pullback<Self, NewInput>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Parsers.ReplaceError<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/body-swift.typealias","title":"PathBuilder.PathZipVVVVVV.Body","type":"typealias"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/parser-implementations","title":"Parser Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/baserequestdata(_:)","title":"func baseRequestData(URLRequestData) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/baseurl(_:)","title":"func baseURL(String) -> BaseURLPrinter<Self>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/erasetoanyparserprinter()","title":"func eraseToAnyParserPrinter() -> AnyParserPrinter<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/path(for:)","title":"func path(for: Self.Output) -> String","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/print()","title":"func print() rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/print(_:)","title":"func print(Self.Output) rethrows -> Self.Input","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/print(_:into:)","title":"func print((), into: inout URLRequestData) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/print(into:)","title":"func print(into: inout Self.Input) rethrows","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/request(for:)","title":"func request(for: Self.Output) throws -> URLRequest","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/url(for:)","title":"func url(for: Self.Output) -> URL","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv\/parserprinter-implementations","title":"ParserPrinter Implementations","type":"symbol"}],"path":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvv","title":"PathBuilder.PathZipVVVVVV","type":"struct"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:)","title":"static func buildBlock<P>(P) -> PathBuilder.Component<P>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:)-30g7r","title":"static func buildBlock<P0, P1>(P0, P1) -> PathBuilder.PathZipOV<P0, P1>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:)-5o4u5","title":"static func buildBlock<P0, P1>(P0, P1) -> PathBuilder.PathZipVO<P0, P1>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:)-79f1g","title":"static func buildBlock<P0, P1>(P0, P1) -> PathBuilder.PathZipVV<P0, P1>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:)-8x5nn","title":"static func buildBlock<P0, P1>(P0, P1) -> PathBuilder.PathZipOO<P0, P1>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:)-12cb6","title":"static func buildBlock<P0, P1, P2>(P0, P1, P2) -> PathBuilder.PathZipVVO<P0, P1, P2>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:)-2e6yq","title":"static func buildBlock<P0, P1, P2>(P0, P1, P2) -> PathBuilder.PathZipVVV<P0, P1, P2>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:)-2s21j","title":"static func buildBlock<P0, P1, P2>(P0, P1, P2) -> PathBuilder.PathZipOOO<P0, P1, P2>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:)-5jlat","title":"static func buildBlock<P0, P1, P2>(P0, P1, P2) -> PathBuilder.PathZipOVO<P0, P1, P2>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:)-640h","title":"static func buildBlock<P0, P1, P2>(P0, P1, P2) -> PathBuilder.PathZipOOV<P0, P1, P2>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:)-77tgi","title":"static func buildBlock<P0, P1, P2>(P0, P1, P2) -> PathBuilder.PathZipVOV<P0, P1, P2>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:)-7tsb1","title":"static func buildBlock<P0, P1, P2>(P0, P1, P2) -> PathBuilder.PathZipOVV<P0, P1, P2>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:)-w079","title":"static func buildBlock<P0, P1, P2>(P0, P1, P2) -> PathBuilder.PathZipVOO<P0, P1, P2>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:)-23669","title":"static func buildBlock<P0, P1, P2, P3>(P0, P1, P2, P3) -> PathBuilder.PathZipOOOV<P0, P1, P2, P3>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:)-2ahr6","title":"static func buildBlock<P0, P1, P2, P3>(P0, P1, P2, P3) -> PathBuilder.PathZipOOVV<P0, P1, P2, P3>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:)-32jlf","title":"static func buildBlock<P0, P1, P2, P3>(P0, P1, P2, P3) -> PathBuilder.PathZipVOOO<P0, P1, P2, P3>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:)-3df83","title":"static func buildBlock<P0, P1, P2, P3>(P0, P1, P2, P3) -> PathBuilder.PathZipVVOO<P0, P1, P2, P3>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:)-3hm3p","title":"static func buildBlock<P0, P1, P2, P3>(P0, P1, P2, P3) -> PathBuilder.PathZipVVVV<P0, P1, P2, P3>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:)-3r79f","title":"static func buildBlock<P0, P1, P2, P3>(P0, P1, P2, P3) -> PathBuilder.PathZipVVOV<P0, P1, P2, P3>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:)-4o6zd","title":"static func buildBlock<P0, P1, P2, P3>(P0, P1, P2, P3) -> PathBuilder.PathZipVVVO<P0, P1, P2, P3>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:)-4vype","title":"static func buildBlock<P0, P1, P2, P3>(P0, P1, P2, P3) -> PathBuilder.PathZipOVVV<P0, P1, P2, P3>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:)-4wuyn","title":"static func buildBlock<P0, P1, P2, P3>(P0, P1, P2, P3) -> PathBuilder.PathZipOOOO<P0, P1, P2, P3>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:)-6dpi5","title":"static func buildBlock<P0, P1, P2, P3>(P0, P1, P2, P3) -> PathBuilder.PathZipVOVO<P0, P1, P2, P3>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:)-8xxk2","title":"static func buildBlock<P0, P1, P2, P3>(P0, P1, P2, P3) -> PathBuilder.PathZipVOOV<P0, P1, P2, P3>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:)-8zk1s","title":"static func buildBlock<P0, P1, P2, P3>(P0, P1, P2, P3) -> PathBuilder.PathZipOVVO<P0, P1, P2, P3>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:)-90n9o","title":"static func buildBlock<P0, P1, P2, P3>(P0, P1, P2, P3) -> PathBuilder.PathZipVOVV<P0, P1, P2, P3>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:)-947xr","title":"static func buildBlock<P0, P1, P2, P3>(P0, P1, P2, P3) -> PathBuilder.PathZipOVOO<P0, P1, P2, P3>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:)-wcnp","title":"static func buildBlock<P0, P1, P2, P3>(P0, P1, P2, P3) -> PathBuilder.PathZipOOVO<P0, P1, P2, P3>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:)-xxiq","title":"static func buildBlock<P0, P1, P2, P3>(P0, P1, P2, P3) -> PathBuilder.PathZipOVOV<P0, P1, P2, P3>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-15t10","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipOOVVV<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-17x78","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipVOOOO<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-1e5sc","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipOOOOV<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-1mdcj","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipVVVOV<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-26wjz","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipVOOVO<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-2ju1k","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipVOOVV<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-31nx4","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipOVVVV<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-35ieh","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipVVVVV<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-3am94","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipVOVVO<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-3ehtz","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipOOOOO<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-3oe6u","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipOVVOO<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-3sdh2","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipOOVVO<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-4n4x1","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipOOVOV<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-53n88","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipVVOOO<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-57jb3","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipVVVVO<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-5pt9v","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipVOOOV<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-5y9mn","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipOOOVO<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-6jl5q","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipVVOOV<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-6pyfs","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipOVOOV<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-6tcfm","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipOVOOO<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-77g45","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipVVVOO<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-7rozu","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipOVOVO<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-86nsd","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipOVVVO<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-8u3ty","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipOOVOO<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-8wtxt","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipVVOVO<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-8x7ea","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipOVOVV<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-9q3jg","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipVOVOO<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-9vob3","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipVOVOV<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-f8ec","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipOVVOV<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-q0oi","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipOOOVV<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-rk7l","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipVVOVV<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:)-s1qu","title":"static func buildBlock<P0, P1, P2, P3, P4>(P0, P1, P2, P3, P4) -> PathBuilder.PathZipVOVVV<P0, P1, P2, P3, P4>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-14ybc","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVOOOOO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-1cnot","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOOVVVO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-1iff9","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVOVOOV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-1jhpk","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOVOOOO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-1jnwl","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOOVOOO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-1ltkr","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVOOVVV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-1yd6u","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVVVVVV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-1yhcd","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVOVVVV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-21rxj","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOOVOOV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-26djp","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOOOVOO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-26snq","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOVOOVV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-29q1w","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOVVVVO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-2amlx","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVVOOVV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-2uq7d","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOVVOVV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-32jcm","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOOVVVV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-37oap","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVOOOOV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-39poc","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVOVVVO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-3pvbw","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVVVOVO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-3rzrh","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVVVVOV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-3xrwl","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOOOOVV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-3z4c9","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOOVOVO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-42n8p","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVOVOVO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-46vpz","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVOOOVV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-4d1gl","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVOOOVO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-4gs3g","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVOOVOO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-4sw5u","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOVOVOO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-528l9","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVVVOOO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-53cxv","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVVOOVO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-53ffr","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVVVVVO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-55fnw","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOVVOOO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-56wqm","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVVVOOV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-5dzkp","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVOOVVO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-5hizq","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVVOVOO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-5ifga","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOOOOVO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-5w527","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVOVOOO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-6bs5k","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOOVOVV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-6eck2","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOVVOOV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-6mrkw","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVOVVOO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-6qo1m","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVVOVVO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-6zghj","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOVOOOV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-7ctj2","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVVVVOO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-7ctxt","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVOVOVV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-7eotx","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOVVVOV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-7ov6l","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOVOOVO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-7srm5","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVOVVOV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-7ty7u","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOVOVVO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-7yuvk","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOVVOVO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-8a24n","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVVVOVV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-8apl","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVOOVOV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-8gbfv","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOOOOOV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-8gord","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOVVVVV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-8hyj2","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOOOVVV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-8ktr8","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVVOOOV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-8r2uh","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVVOVOV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-8vf7","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOVVVOO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-8x28x","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOVOVOV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-98i4z","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOOVVOO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-9faql","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOOOVOV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-9sw7h","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOOOOOO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-9t0m9","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVVOOOO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-9ti9q","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOOOVVO<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-bb8j","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipVVOVVV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-dyp4","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOOVVOV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildblock(_:_:_:_:_:_:)-evy3","title":"static func buildBlock<P0, P1, P2, P3, P4, P5>(P0, P1, P2, P3, P4, P5) -> PathBuilder.PathZipOVOVVV<P0, P1, P2, P3, P4, P5>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildexpression(_:)-4zash","title":"static func buildExpression<P>(P) -> From<Conversions.SubstringToUTF8View, Substring.UTF8View, P>","type":"method"},{"path":"\/documentation\/urlrouting\/pathbuilder\/buildexpression(_:)-8hrek","title":"static func buildExpression<P>(P) -> P","type":"method"}],"path":"\/documentation\/urlrouting\/pathbuilder","title":"PathBuilder","type":"enum"}],"path":"\/documentation\/urlrouting","title":"URLRouting","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}